name: mock-build-and-deploy

on:
  workflow_dispatch:
    inputs:
      BUILD_TIME:
        description: build length (in seconds)
        type: string
        required: true
        default: 5
      DEPLOYMENT_TIME:
        description: deployment lengths (in seconds)
        type: string
        required: true
        default: 5
      FAIL_DEV_DEPLOY:
        description: fail deployment to `dev`?
        type: boolean
        required: false
        default: false

jobs:
  build-job:
    uses: cawfeecake/my-reusable-workflows/.github/workflows/sleep.yaml@main
    with:
      TIME_TO_SLEEP: ${{ inputs.BUILD_TIME }}
  determine-if-next:
    needs: [ build-job ]
    runs-on: ubuntu-latest
    steps:
      - env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          previous_run_number=$((${{ github.run_number }} - 1))
          if [[ $previous_run_number > 0 ]]; then
            # question: is this the best way to get information on the n - 1 workflow?
            twenty_most_recent_runs=$(mktemp)
            # default for --limit in following command is 20
            gh run list -R ${{ github.repository }} -w ${{ github.workflow }} --json conclusion,createdAt,headBranch,headSha,number,startedAt,status,updatedAt > $twenty_most_recent_runs
            # <debug>
            echo '::group::20 most recent workflow runs'
            jq . $current_workflow_runs
            echo '::endgroup::'
            # </debug>
            previous_run=$(jq --argjson prev "$previous_run_number" 'map(select(.number == $prev))' $current_workflow_runs)
            if [[ $(jq 'length' <<< $previous_run) > 0 ]]; then
              # <debug>
              echo '::group::previous workflow run'
              jq . <<< $previous_run
              echo '::endgroup::'
              # <debug>
              # TODO
            else
              echo "::warning::unable to find the previous run (#$previous_run_number) in most recent 20 workflow runs"
            fi
          else
            echo '::info::this is the first run of the workflow; proceeding...'
          fi
  deploy-dev:
    needs: [ determine-if-next ]
    uses: cawfeecake/my-reusable-workflows/.github/workflows/sleep-with-concurrency-key.yaml@main
    with:
      CONCURRENCY_KEY: dev
      TIME_TO_SLEEP: ${{ inputs.DEPLOYMENT_TIME }}
      SHOULD_FAIL: ${{ inputs.FAIL_DEV_DEPLOY }}
  deploy-int:
    needs: [ deploy-dev ]
    uses: cawfeecake/my-reusable-workflows/.github/workflows/sleep-with-concurrency-key.yaml@main
    with:
      CONCURRENCY_KEY: int
      TIME_TO_SLEEP: ${{ inputs.DEPLOYMENT_TIME }}
  deploy-prod:
    needs: [ deploy-int ]
    uses: cawfeecake/my-reusable-workflows/.github/workflows/sleep-with-concurrency-key.yaml@main
    with:
      CONCURRENCY_KEY: prod
      TIME_TO_SLEEP: ${{ inputs.DEPLOYMENT_TIME }}
