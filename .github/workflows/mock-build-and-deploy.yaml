name: mock-build-and-deploy

on:
  workflow_dispatch:
    inputs:
      BUILD_TIME:
        description: build length (in seconds)
        type: string
        required: true
        default: 1
      DEPLOYMENT_TIME:
        description: deployment lengths (in seconds)
        type: string
        required: true
        default: 1
      FAIL_DEPLOYMENT_TO:
        description: if not "none", will have job that deploys to given environment fail
        type: choice
        options:
          - none
          - dev
          - int
          - prod
        required: true
        default: none

jobs:
  build-job:
    uses: cawfeecake/my-reusable-workflows/.github/workflows/sleep.yaml@main
    with:
      TIME_TO_SLEEP: ${{ inputs.BUILD_TIME }}
  determine-if-should-queue:
    runs-on: ubuntu-latest
    outputs:
      should-queue-map: ${{ steps.action-call.outputs.should-queue-map }}
      previous-run: ${{ steps.action-call.outputs.previous-run }}
    steps:
      - id: action-call
        uses: cawfeecake/actions-determine-to-queue@main
        with:
          RUN_TO_QUEUE: ${{ github.run_number }}
          JOB_NAMES: >-
            deploy-dev
            deploy-int
            deploy-prod
  queue-before-deploy-dev-if-needed:
    needs: [ build-job, determine-if-should-queue ]
    if: |
      (always() && ! cancelled() && ! failure()) &&
      needs.build-job.result == 'success'
    runs-on: ubuntu-latest
    steps:
      # <debug>
      - run: |
          echo 'step JSON...'
          echo "$STEP_JSON"
          echo 'step outputs JSON...'
          echo "$STEP_OUTPUTS"
        env:
          STEP_JSON: ${{ toJson(needs.determine-if-should-queue) }}
          STEP_OUTPUTS: ${{ toJson(needs.determine-if-should-queue.outputs) }}
      # </debug>
      - uses: cawfeecake/actions-concurrency-queue@main
        with:
          RUN_ID: ${{ needs.determine-if-should-queue.outputs.previous-run }}
          JOB_NAME: deploy-dev
  deploy-dev:
    needs: [ build-job, queue-before-deploy-dev-if-needed ]
    if: |
      (always() && ! cancelled() && ! failure()) &&
      needs.build-job.result == 'success' &&
      (needs.queue-before-deploy-dev-if-needed.result == 'success' || needs.queue-before-deploy-dev-if-needed.result == 'skipped')
    uses: cawfeecake/my-reusable-workflows/.github/workflows/sleep.yaml@main
    with:
      CONCURRENCY_KEY: dev
      ENVIRONMENT: dev
      TIME_TO_SLEEP: ${{ inputs.DEPLOYMENT_TIME }}
      SHOULD_FAIL: ${{ inputs.FAIL_DEPLOYMENT_TO == 'dev' }}
  queue-before-deploy-int-if-needed:
    needs: [ deploy-dev, determine-if-should-queue ]
    if: |
      (always() && ! cancelled() && ! failure()) &&
      needs.deploy-dev.result == 'success' &&
      fromJson(needs.determine-if-should-queue.outputs.should-queue-map).deploy-int == 'true'
    runs-on: ubuntu-latest
    steps:
      # <debug>
      - run: |
          echo "${{ fromJson(needs.determine-if-should-queue.outputs.should-queue-map)['deploy-int'] }}"
      # </debug>
      - uses: cawfeecake/actions-concurrency-queue@main
        with:
          RUN_ID: ${{ needs.determine-if-should-queue.outputs.previous-run }}
          JOB_NAME: deploy-int
  deploy-int:
    needs: [ deploy-dev, queue-before-deploy-int-if-needed ]
    if: |
      (always() && ! cancelled() && ! failure()) &&
      needs.deploy-dev.result == 'success' &&
      (needs.queue-before-deploy-int-if-needed.result == 'success' || needs.queue-before-deploy-int-if-needed.result == 'skipped')
    uses: cawfeecake/my-reusable-workflows/.github/workflows/sleep.yaml@main
    with:
      CONCURRENCY_KEY: int
      ENVIRONMENT: int
      TIME_TO_SLEEP: ${{ inputs.DEPLOYMENT_TIME }}
      SHOULD_FAIL: ${{ inputs.FAIL_DEPLOYMENT_TO == 'int' }}
  queue-before-deploy-prod-if-needed:
    needs: [ deploy-int, determine-if-should-queue ]
    if: |
      (always() && ! cancelled() && ! failure()) &&
      needs.deploy-int.result == 'success' &&
      fromJson(needs.determine-if-should-queue.outputs.should-queue-map).deploy-prod == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: cawfeecake/actions-concurrency-queue@main
        with:
          RUN_ID: ${{ needs.determine-if-should-queue.outputs.previous-run }}
          JOB_NAME: deploy-prod
  deploy-prod:
    needs: [ deploy-int, queue-before-deploy-prod-if-needed ]
    if: |
      (always() && ! cancelled() && ! failure()) &&
      needs.deploy-int.result == 'success' &&
      (needs.queue-before-deploy-prod-if-needed.result == 'success' || needs.queue-before-deploy-prod-if-needed.result == 'skipped')
    uses: cawfeecake/my-reusable-workflows/.github/workflows/sleep.yaml@main
    with:
      CONCURRENCY_KEY: prod
      ENVIRONMENT: prod
      TIME_TO_SLEEP: ${{ inputs.DEPLOYMENT_TIME }}
      SHOULD_FAIL: ${{ inputs.FAIL_DEPLOYMENT_TO == 'prod' }}
